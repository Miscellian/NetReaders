#users table queries
user.create=INSERT INTO users(user_name, user_password, email, first_name, last_name) VALUES(?,?,?,?,?)
user.read=SELECT * FROM users WHERE user_id = ?
user.update=UPDATE users SET user_name = ?, user_password = ?, email = ?, first_name = ?, last_name = ?, profile_photo = ? WHERE user_id = ?
user.updateByEditForm=UPDATE users SET user_name = ?, first_name = ?, last_name = ?, email = ? WHERE user_id = ?
user.delete=DELETE FROM users WHERE user_id = ?
user.readAll=SELECT * FROM users
user.findByUsername=SELECT * FROM users WHERE lower(user_name) = ?
user.findByFirstName=SELECT * FROM users WHERE lower(first_name) = ?
user.deleteByNickname=DELETE FROM users WHERE lower(user_name) = ?
user.getAdminsList=SELECT a.* FROM users a INNER JOIN user_role ur ON a.user_id = ur.user_id INNER JOIN roles r ON r.role_id = ur.role_id WHERE r.role_name = 'ADMIN';
user.getModeratorsList=SELECT m.* FROM users m INNER JOIN user_role ur ON m.user_id = ur.user_id INNER JOIN roles r ON r.role_id = ur.role_id WHERE r.role_name LIKE '%MODERATOR';

#Roles
role.findByRoleName=SELECT role_id, role_name FROM roles WHERE role_name = ?
role.findByUserId=SELECT r.role_id, r.role_name FROM roles r INNER JOIN user_role ur on r.role_id = ur.role_id where ur.user_id = ?
role.addUserToRole=INSERT INTO user_role(user_id, role_id) VALUES(?,?)
role.read=SELECT * FROM roles WHERE role_id = ?

#Tokens
registrationToken.findByToken=SELECT * FROM registration_tokens WHERE token_value = ?
registrationToken.findByUser=SELECT * FROM registration_tokens WHERE user_id = ?
registrationToken.create=INSERT INTO registration_tokens(user_id, token_value, created_time) VALUES(?,?,?)
registrationToken.read=SELECT * FROM registration_tokens WHERE registration_token_id = ?
registrationToken.delete=DELETE FROM registration_tokens WHERE registration_token_id = ?

#books table queries
book.create=INSERT INTO books(title,photo,description,release_date,book_language) VALUES(?,?,?,?,?)
book.read=SELECT * FROM books WHERE book_id = ?
book.update=UPDATE books SET title = ?, description = ?, release_date = ?, book_language = ?, photo = ? WHERE book_id = ?
book.delete=DELETE FROM books WHERE book_id = ?
book.readAll=SELECT * FROM books
book.findBooksByGenre=SELECT b.book_id, b.title, b.photo, b.description, b.release_date, b.book_language FROM books b INNER JOIN book_genre bg ON bg.book_id = b.book_id WHERE bg.genre_id = ? LIMIT ? OFFSET ?
book.findBooksByAuthor=SELECT b.book_id, b.title, b.photo, b.description, b.release_date, b.book_language FROM books b INNER JOIN book_author ba ON ba.book_id = b.book_id WHERE ba.author_id = ? LIMIT ? OFFSET ?
book.getById=SELECT * FROM books ORDER BY book_id LIMIT ? OFFSET ?
book.getByName=SELECT b.book_id, b.title, b.photo, b.description, b.release_date, b.book_language FROM books b INNER JOIN book_author ba ON ba.book_id = b.book_id INNER JOIN authors a ON ba.author_id = a.author_id WHERE (lower(b.title) LIKE '%'||?||'%') OR (lower(a.author_name) LIKE '%'||?||'%') LIMIT ? OFFSET ?
book.getByUsername=SELECT b.book_id, b.title, b.photo, b.description, b.release_date, b.book_language FROM books b INNER JOIN user_book ub ON b.book_id = ub.book_id INNER JOIN users u ON u.user_id = ub.user_id WHERE lower(u.user_name) = ? LIMIT ? OFFSET ?
book.getFavouritesByUsername=SELECT b.book_id, b.title, b.photo, b.description, b.release_date, b.book_language FROM books b INNER JOIN user_book ub ON b.book_id = ub.book_id INNER JOIN users u ON u.user_id = ub.user_id WHERE (lower(u.user_name) = ? AND ub.favourite_mark = true) LIMIT ? OFFSET ?
book.getCount=SELECT COUNT(*) FROM books
book.getCountByAuthor=SELECT COUNT(*) FROM books b INNER JOIN book_author ba ON ba.book_id = b.book_id WHERE ba.author_id = ?
book.getCountByGenre=SELECT COUNT(*) FROM books b INNER JOIN book_genre bg ON bg.book_id = b.book_id WHERE bg.genre_id = ?
book.getCountByName=SELECT COUNT(*) FROM books b INNER JOIN book_author ba ON ba.book_id = b.book_id INNER JOIN authors a ON ba.author_id = a.author_id WHERE (lower(b.title) LIKE '%'||?||'%') OR (lower(a.author_name) LIKE '%'||?||'%')
book.getByReviewId=SELECT b.book_id, b.title, b.photo, b.description, b.release_date, b.book_language from books b inner join reviews r on b.book_id = r.book_id where r.review_id = ?
book.getCountByUsername=SELECT COUNT(*) FROM books b INNER JOIN user_book ub ON ub.book_id = b.book_id INNER JOIN users u ON ub.user_id = u.user_id WHERE lower(u.user_name) = ?
book.getFavouritesCountByUsername=SELECT COUNT(*) FROM books b INNER JOIN user_book ub ON ub.book_id = b.book_id INNER JOIN users u ON ub.user_id = u.user_id WHERE (lower(u.user_name) = ? AND ub.favourite_mark = true)
book.addBookToUserLibrary=INSERT INTO user_book(user_id, book_id) VALUES ((SELECT user_id FROM users WHERE user_name = ?), ?)
book.checkIfBookInUserLibrary=SELECT b.* FROM books b INNER JOIN user_book ub ON b.book_id = ub.book_id INNER JOIN users u ON ub.user_id = u.user_id WHERE (lower(u.user_name) = ? AND b.book_id = ?)
book.removeBookFromUserLibrary=DELETE FROM user_book WHERE user_id = (SELECT user_id FROM users WHERE lower(user_name) = ?) AND book_id = ?
book.checkIfBookInFavourites=SELECT b.* FROM books b INNER JOIN user_book ub ON b.book_id = ub.book_id INNER JOIN users u ON ub.user_id = u.user_id WHERE (lower(u.user_name) = ? AND b.book_id = ? AND ub.favourite_mark = true);
book.addBookToUserFavourites=UPDATE user_book SET favourite_mark=true WHERE user_id = (SELECT user_id FROM users WHERE user_name = ?) AND book_id = ?;
book.removeBookToUserFavourites=UPDATE user_book SET favourite_mark=false WHERE user_id = (SELECT user_id FROM users WHERE user_name = ?) AND book_id = ?;

#authors table queries
author.create=INSERT INTO authors(author_name) values(?)
author.read=SELECT * FROM authors WHERE author_id = ?
author.update=UPDATE authors SET author_name = ? WHERE author_id = ?
author.delete=DELETE FROM authors WHERE author_id = ?
author.readAll=SELECT * FROM authors
author.getByBookId=SELECT a.author_id, a.author_name FROM authors a INNER JOIN book_author b on b.author_id = a.author_id WHERE b.book_id = ?

#genres table queries
genre.create=INSERT INTO genres(genre_name) values(?)
genre.read=SELECT * FROM genres WHERE genre_id = ?
genre.update=UPDATE genres SET genre_name = ? WHERE genre_id = ?
genre.delete=DELETE FROM genres WHERE genre_id = ?
genre.readAll=SELECT * FROM genres
genre.getByBookId=SELECT DISTINCT g.genre_id, g.genre_name FROM genres g INNER JOIN book_genre bg ON bg.genre_id = g.genre_id WHERE bg.book_id = ?

#review table queries
review.create=INSERT INTO reviews(book_id,rating,description,published) values(?,?,?,?)
review.read=SELECT review_id, rating, description, published from reviews where review_id=?
review.update=UPDATE reviews SET rating = ?, description = ?, published = ? where review_id = ?
review.getByBookId=SELECT review_id, rating, description, published from reviews r inner join books b on r.book_id=b.book_id where b.book_id = ? LIMIT ? OFFSET ?
review.getPublishedByBookId=SELECT review_id, rating, description, published from reviews r inner join books b on r.book_id=b.book_id where b.book_id = ? and r.published = true LIMIT ? OFFSET ?
review.getUnpublishedByBookId=SELECT review_id, rating, description, published from reviews r inner join books b on r.book_id=b.book_id where b.book_id = ? and r.published = false LIMIT ? OFFSET ?
#announcements table queries
announcement.create=INSERT INTO announcements(announcement_date, description, published) values(?,?,?)
announcement.read=SELECT * FROM announcements WHERE announcement_id = ?
announcement.update=UPDATE announcements SET announcement_date = ?, description = ?, published = ? WHERE announcement_id = ?
announcement.delete=DELETE FROM announcements WHERE announcement_id = ?
announcement.readAll=SELECT * FROM announcements
announcement.findAnnouncementsByGenre=SELECT DISTINCT an.announcement_id, an.announcement_date, an.description, an.published  FROM announcements AS an INNER JOIN book_announcement ba ON ba.announcement_id = an.announcement_id INNER JOIN book_genre bg ON bg.book_id = ba.book_id WHERE bg.genre_id = ? AND an.published = true ORDER BY an.announcement_date DESC LIMIT ? OFFSET ?
announcement.findAnnouncementsByAuthor=SELECT DISTINCT an.announcement_id, an.announcement_date, an.description, an.published  FROM announcements AS an INNER JOIN book_announcement ba ON ba.announcement_id = an.announcement_id INNER JOIN book_author bt ON bt.book_id = ba.book_id WHERE bt.author_id = ? AND an.published = true ORDER BY an.announcement_date DESC LIMIT ? OFFSET ?
announcement.getByIdWithOffset=SELECT an.announcement_id, an.announcement_date, an.description, an.published FROM announcements AS an ORDER BY an.announcement_date DESC LIMIT ? OFFSET ?